USE [CSM_BM]
GO
/****** Object:  StoredProcedure [dbo].[PR_QUERY_CHARGE_RECORDS_original]    Script Date: 09/01/2023 09:37:59 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
-- =============================================
  -- Author:  tonychi
  -- Create date: <2020/11/29>
  -- Description: <开账记录查询>
  -- =============================================
ALTER  proc [dbo].[PR_QUERY_CHARGE_RECORDS]
  @SUBCOM_CODE VARCHAR(20),         -- 站点
  @BILLINGMONTH_START INT,      -- 账务年月
  @BILLINGMONTH_END INT,
  @CARD_ID VARCHAR(200),              -- 表卡号，单个
  --@USER_TYPE VARCHAR(50),
  @RECORD_LGLD_STATE int=-99,
  @RECORD_TYPE int=-99,
  @CHECK_DATE_START VARCHAR(20),
  @CHECK_DATE_END VARCHAR(20),

  @CUSTOMER_TYPE INT,
  @VAT_COD VARCHAR(50),
  @BANK_ACCOUNT VARCHAR(50),

  @PAY_METHOD INT,
  @IS_TS INT,
  @CARD_NAME VARCHAR(500),
  @CARD_ADDRESS VARCHAR(500),
  @PRICE_CODE VARCHAR(100),
  @STAT_ID varchar(50),
  @CARD_INDUSTRY INT,
  @CONCENTRATE_CHARGE_ID nvarchar(50),

  @METER_FUNCTION INT,
  @METER_SEAL_NUMBER VARCHAR(20),
  @CALIBER_ID VARCHAR(20),
  @CATEGORY_ID INT,
  @METER_TYPE2 INT,

  @METER_READER NVARCHAR(20),   -- 抄表员
  @READER_CLASS INT,   -- 抄表班组
  @READ_AREA INT,      -- 抄表区域
  @BOOK_ID VARCHAR(500),    -- 册本号
  @RECORD_STATE INT,   -- 抄表状态
	
  @ISSHOWZEROWATERACC INT, --是否显示0水量
	
  @UPLOAD_ID  VARCHAR(20), -- 上传编号
  @ACC_WATER_FROM INT= -99,
  @ACC_WATER_TO INT= -99,
  @USER_TYPE INT= -99,
  @SORT_FILED VARCHAR(100),
  @ROWSN_FROM  INT= 0,
	
  @ROWSN_END  INT= 100,
  @DIVIDING_NO VARCHAR(100),
  @CHECK_PERSONS VARCHAR(100),
  @PRODUCERID NVARCHAR(100)

AS
BEGIN

	SET NOCOUNT ON;
  DECLARE
           @SQL_MC  NVARCHAR(max)='',
           @SQL_MC_TABLE  NVARCHAR(2000)='',
           @SQL_MC_JOIN  NVARCHAR(max)='',
           @SQL_MC_WHERE  NVARCHAR(2000)='',
           @SQL_MC_COLUMN  NVARCHAR(2000)='',
           
           @SQL_MR_ROWNUM NVARCHAR(2000)='',
           @SQL_MR_ROWNUM_WHERE NVARCHAR(2000)='',
           @SQL_MR_TABLE  NVARCHAR(max)='',
           @SQL_MR_JOIN  NVARCHAR(max)='',
           @SQL_MR_WHERE NVARCHAR(2000)='',
           @SQL_MR_ORDER NVARCHAR(1000)='',
           
           
           @SQL_OTHER_COLUMN NVARCHAR(4000)='',
           @SQL_MR_OTHER NVARCHAR(4000)='',
           
           @SQL_ACC_COLUMN NVARCHAR(4000)='',  
           @SQL_ACC NVARCHAR(max)='',
           @SQL_RESULT NVARCHAR(MAX)='',
           @SQL_RESULT_SUMMARY NVARCHAR(MAX)='';
  -- 导出开账记录，


  -- 客户类型、增值税号、银行账号、
  -- 功能分类、钢印号、口径、表分类2
  -- 缴费方式、去除托收、表卡名称、表卡地址、用水性质、统计分类、行业、集收号、表卡编号
  -- 册本、抄表区域、班组、抄表员

  -- 账务年月(2)、站点、开账日期(2)
  -- 查询零水量、查询历史
  -- 抄表状态

  SET @SQL_MC_TABLE = 'SELECT 
    CARD.SUBCOM_CODE, SUBCOM.SUBCOM_NAME,  
    CARD.CARD_ID, CARD.CARD_NAME, CARD.CARD_ADDRESS, CARD.PAY_METHOD, CARD.PRICE_CODE, CARD.CONTACTS, 
    CARD.BOOK_ID, CARD.BOOK_SORT_INDEX, BOOK.BOOK_NAME, BOOK.AREA_ID, BOOK.METER_READER, 
    CARD.USER_TYPE,CUSTOMER.CUSTOMER_TYPE,CARD.DIVIDING_NO,
    METER.METER_FUNCTION,METER.CATEGORY_ID, METER.METER_TYPE2, METER.CALIBER_ID, METER.METER_TYPE, METER.SEAL_NUMBER,MC.CALIBERS_NAME,PR.PRODUCERS_NAME
  FROM CM_METERCARDS CARD
  INNER JOIN CM_METERS METER ON CARD.CARD_ID = METER.CARD_ID
  INNER JOIN MR_METERBOOKS BOOK ON CARD.BOOK_ID = BOOK.BOOK_ID
  INNER JOIN MR_METERCALIBERS MC ON MC.CALIBERS_ID = METER.CALIBER_ID 
  INNER JOIN CM_CUSTOMERS CUSTOMER ON CARD.CUSTOMER_ID = CUSTOMER.CUSTOMER_ID
  INNER JOIN CSM_SUBCOMPANIES SUBCOM ON CARD.SUBCOM_CODE=SUBCOM.SUBCOM_CODE
  INNER JOIN MR_METERPRODUCERS PR ON PR.PRODUCERS_ID=METER.PRODUCER_ID';

  --INNER JOIN CM_CUSTOMERS CUSTOMER ON CARD.CUSTOMER_ID = CUSTOMER.CUSTUMER_ID
  --INNER JOIN MR_CLASS_DETAILS CD ON BOOK.METER_READER = CD.READER_ID  -- 关联班组
SET @SQL_MC_TABLE = @SQL_MC_TABLE + ' INNER JOIN (SELECT ST_CODE FROM func_get_station(''' + @SUBCOM_CODE + ''')) B  ON CARD.SUBCOM_CODE=B.ST_CODE';

  SET @SQL_MC_WHERE = ' WHERE 1=1 ' ;

  SET @SQL_MC_COLUMN ='
		C.CARD_ID,
		C.SUBCOM_NAME,
		C.CARD_NAME, 
		C.CARD_ADDRESS, 
		C.PAY_METHOD, 
		C.PRICE_CODE, 
		C.CONTACTS, 
		C.BOOK_NAME,
		C.AREA_ID, 
    C.CUSTOMER_TYPE,
	C.USER_TYPE,
    C.METER_FUNCTION,
	C.CATEGORY_ID,
		C.METER_TYPE2,
		C.DIVIDING_NO,
		C.CALIBER_ID,
		C.CALIBERS_NAME,
		C.PRODUCERS_NAME,
		dbo.FUNC_GET_PRICENAME(C.PRICE_CODE ,NULL) AS PRINCECODECN,
		dbo.FUNC_GET_CONTACTPHONE(C.CARD_ID) AS TELEPHONE';

  -- 客户相关
  --* CUSTOMER.CUSTOMER_TYPE = @CUSTOMER_TYPE
  --* CUSTOMER.VAT_CODE = @VAT_COD
  --* CUSTOMER.BANK_ACCOUNT = @BANK_ACCOUNT

  --IF @CUSTOMER_TYPE<>-1 AND @CUSTOMER_TYPE IS NOT NULL BEGIN
  --  SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CUSTOMER.CUSTOMER_TYPE = ' + cast(@CUSTOMER_TYPE as varchar(20));
  --END
  IF @PRODUCERID IS NOT NULL BEGIN
    SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @PRODUCERID + ''','','')) P ON P.SINGLEVALUE = METER.PRODUCER_ID ';
  END

  IF @USER_TYPE<>-99 AND @USER_TYPE IS NOT NULL BEGIN 
  SET @SQL_MC_WHERE=@SQL_MC_WHERE+' AND CARD.USER_TYPE= '+CAST(@USER_TYPE AS varchar(20));
  END
  IF @VAT_COD IS NOT NULL BEGIN
    SET @SQL_MC_JOIN  = @SQL_MC_JOIN  + ' INNER JOIN CM_INVOICE_SETTING INVOICE ON CARD.CARD_ID=INVOICE.CARD_ID';
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND INVOICE.INVOICE_CODE = ''' + cast(@VAT_COD as varchar(20))+'''';
  END

  IF @BANK_ACCOUNT IS NOT NULL BEGIN
      SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN CM_MICROPAYMENT MP ON CARD.TS_ID=MP.TS_ID AND MP.ACCOUNT_NO = ''' + cast(@BANK_ACCOUNT as varchar(20))+'''';
  END
  IF @CATEGORY_ID<>-1 AND @CATEGORY_ID IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND METER.CATEGORY_ID = ' +cast(@CATEGORY_ID as varchar(20));
  END
  -- 表卡相关 
  --CARD.CARD_ID = @CARD_ID
  --CARD.PAY_METHOD = @PAY_METHOD
  --CARD.PAY_METHOD != 3   -- 排除托收
  --CARD.CARD_NAME = @CARD_NAME
  --CARD.CARD_ADDRESS = @CARD_ADDRESS
  --CARD.PRICE_CODE = @PRICE_CODE
  --CARD.STAT_ID = @STAT_ID    -- 统计分类
  --CARD.CARD_INDUSTRY = @CARD_INDUSTRY     -- 行业
  --CARD.CONCENTRATE_CHARGE_ID = @CONCENTRATE_CHARGE_ID   -- 集收号 
  IF @UPLOAD_ID IS NOT NULL BEGIN
	  SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN CM_UPLOAD_SEARCH_TEMP CUS ON CARD.CARD_ID=CUS.CARD_ID AND CUS.UPLOAD_ID='''+  cast(@UPLOAD_ID as varchar(20))+'''' ;
	  END
  ELSE  IF @CARD_ID IS NOT NULL BEGIN
    SET @SQL_MC_JOIN = @SQL_MC_JOIN + 'INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @CARD_ID + ''','','')) K ON K.SINGLEVALUE = CARD.CARD_ID  ';
  END

  IF @PAY_METHOD IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.PAY_METHOD = ' + CAST(@PAY_METHOD AS VARCHAR(20));
  END

 


  IF  @IS_TS=1 BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.PAY_METHOD <> 3 ';
  END

  IF @CARD_NAME IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.CARD_NAME LIKE  ''%' + @CARD_NAME + '%''';
  END

  IF @DIVIDING_NO IS NOT NULL  BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.DIVIDING_NO =''' + @DIVIDING_NO + '''';
  END

  IF @CARD_ADDRESS IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.CARD_ADDRESS LIKE ''%' + @CARD_ADDRESS + '%''';
  END

  IF @PRICE_CODE IS NOT NULL BEGIN
   SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @PRICE_CODE + ''','','')) PC ON PC.SINGLEVALUE = CARD.PRICE_CODE ';
  END
  --IF @USER_TYPE  IS NOT NULL BEGIN
	 --SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @USER_TYPE + ''','','')) U ON U.SINGLEVALUE = CARD.USER_TYPE  ';
  
  --END
  
  IF @STAT_ID IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.STAT_ID = ''' + CAST(@STAT_ID AS VARCHAR(20))+'''';
  END

  IF @CARD_INDUSTRY IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.CARD_INDUSTRY = ' + CAST(@CARD_INDUSTRY AS VARCHAR(20));
  END

  IF @CONCENTRATE_CHARGE_ID IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CARD.CONCENTRATE_CHARGE_ID = ''' + CAST(@CONCENTRATE_CHARGE_ID AS VARCHAR(20))+'''';
  END

  -- 水表相关
  --METER.METER_FUNCTION = @METER_FUNCTION
  --METER.SEAL_NUMBER = @METER_SEAL_NUMBER
  --METER.CALIBER_ID = @CALIBER_ID
  --METER.METER_TYPE2 = @METER_TYPE2

  IF @METER_FUNCTION<>-1 AND @METER_FUNCTION IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND METER.METER_FUNCTION = ' + CAST(@METER_FUNCTION AS varchar(20));
  END

  IF @METER_SEAL_NUMBER IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND METER.SEAL_NUMBER  LIKE ''%' + @METER_SEAL_NUMBER + '%''';
  END

  IF @CALIBER_ID IS NOT NULL BEGIN
    SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @CALIBER_ID + ''','','')) CI ON CI.SINGLEVALUE = METER.CALIBER_ID ';
  END

  IF @METER_TYPE2<>-1 AND @METER_TYPE2 IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND METER.METER_TYPE2 = ' +cast(@METER_TYPE2 as varchar(20));
  END

  -- 抄表相关
  --BOOK.METER_READER = @METER_READER
  --CD.CL_ID = @READER_CLASS
  --BOOK.AREA_ID = @READ_AREA
  --CARD.BOOK_ID = @BOOK_ID
  IF @METER_READER IS NOT NULL BEGIN
   SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @METER_READER + ''','','')) M_READER ON M_READER.SINGLEVALUE = BOOK.METER_READER ';
  END

  IF @READER_CLASS<>0 AND @READER_CLASS IS NOT NULL BEGIN
    SET @SQL_MC_JOIN = @SQL_MC_JOIN + ' INNER JOIN MR_CLASS_DETAILS CD ON BOOK.METER_READER = CD.READER_ID ';  -- 关联班组 
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND CD.CL_ID  = ' + cast(@READER_CLASS as varchar(20));
  END

  IF @READ_AREA<>0 AND  @READ_AREA IS NOT NULL BEGIN
    SET @SQL_MC_WHERE = @SQL_MC_WHERE + ' AND BOOK.AREA_ID = ' + CAST(@READ_AREA AS VARCHAR(20));
  END

  IF @BOOK_ID IS NOT NULL BEGIN
   SET @SQL_MC_JOIN  = @SQL_MC_JOIN +' INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @BOOK_ID + ''','','')) H ON H.SINGLEVALUE = CARD.BOOK_ID ';
  END


----------------
-- 抄表记录
  SET @SQL_MR_ORDER = ' ORDER BY MR.BOOK_ID, MR.BOOK_SORT_INDEX  ASC';
  IF @SORT_FILED IS NOT NULL BEGIN
	  SET @SQL_MR_ORDER=@SORT_FILED;
  END
  
  SET @SQL_MR_ROWNUM = ' SELECT ROW_NUMBER() OVER ( ' + @SQL_MR_ORDER + ') AS ROWSN, ';

  SET  @SQL_MR_TABLE = ' 
    C.BOOK_ID,
    C.BOOK_SORT_INDEX,
    MR.RECORD_ID,
    MR.RECORD_STATE,
    MR.RECORD_LGLD_STATE,
    MR.RECORD_REASON_LGLD,
    C.METER_TYPE,
    C.SUBCOM_CODE,
    MR.BILLING_MONTH,
    MR.READ_DATE,
    MR.METER_READER,
    MR.LAST_READING,
    MR.READING,
    MR.RECORD_METHOD,
    MR.RECORD_TYPE,
    MR.READ_WATER,
    C.SEAL_NUMBER,
    MR.CHECK_TIME,
    MR.READ_TIMES,
    MR.READING1,
    MR.LAST_READING1, '
		+ @SQL_MC_COLUMN + 
		'  FROM MR_RECORD MR WITH(NOLOCK) ';
  --CM_METERCARDS B
  --MR_METERBOOKS MM
  --CM_METERS MDZZ
  --MR_METERCALIBERS MC
  SET @SQL_MR_JOIN = ' INNER JOIN ( ' + @SQL_MC_TABLE + @SQL_MC_JOIN + @SQL_MC_WHERE + ' ) C ON MR.CARD_ID = C.CARD_ID ';

  SET @SQL_MR_WHERE = ' WHERE MR.BILLING_MONTH BETWEEN ' + CAST(@BILLINGMONTH_START AS VARCHAR(20)) + ' AND ' + CAST(@BILLINGMONTH_END AS VARCHAR(20));

  IF @RECORD_STATE IS NOT NULL BEGIN 
	SET  @SQL_MR_WHERE = @SQL_MR_WHERE+ ' AND MR.RECORD_STATE=' +CAST(@RECORD_STATE AS varchar(10));
  END
  ELSE
   BEGIN
   SET  @SQL_MR_WHERE = @SQL_MR_WHERE+ ' AND MR.RECORD_STATE IN (0,1,4)';
   END

  SET @SQL_MR_ROWNUM_WHERE = ' WHERE ROWSN BETWEEN ' + CAST(@ROWSN_FROM AS varchar(20)) + ' AND ' + CAST(@ROWSN_END AS VARCHAR(20));

 SET  @SQL_ACC_COLUMN= @SQL_ACC_COLUMN + 'ACC.FEE_ID, ACC.ACC_WATER, ACC.ACC_CHECK_MONEY, ACC.PI1_MONEY, ACC.PI2_MONEY, ACC.ACC_MONEY, ACC.PI8_MONEY, ACC.BALANCE,ACC.LAST_BALANCE,ACC.PAY_STATE,exter.ACC_PRINT_TIMES, ISNULL(exter.LAST_PRINT_TIME,'''') AS LAST_PRINT_TIME,exter.LAST_PRINTER,exter.FEE_TYPE,';

  IF @RECORD_STATE = 4 BEGIN 
	SET @SQL_ACC = ' INNER JOIN ACC_CHARGES ACC  with(nolock) ON ACC.MRECORD_ID = MR.RECORD_ID AND  FEE_STATE = 0
      AND PAY_STATE IN ( 0, 1, 2, 3 )
      AND ADJUST_TYPE IN ( 0, 4 ) ';
	  END
  ELSE
  BEGIN
	SET @SQL_ACC = ' LEFT JOIN ACC_CHARGES ACC with(nolock)  ON ACC.MRECORD_ID = MR.RECORD_ID AND  FEE_STATE = 0
      AND PAY_STATE IN ( 0, 1, 2, 3 )
      AND ADJUST_TYPE IN ( 0, 4 ) ';
  END

  IF @CHECK_DATE_START IS NOT NULL BEGIN
    SET @SQL_ACC = @SQL_ACC +' AND ACC.CHECK_TIME >=  CONVERT(datetime,'''+@CHECK_DATE_START+''', 20)';
  END

  IF @CHECK_DATE_END IS NOT NULL BEGIN 
    SET @SQL_ACC = @SQL_ACC +' AND ACC.CHECK_TIME <= CONVERT(datetime,'''+@CHECK_DATE_END+''', 20) ';
  END

  IF @ACC_WATER_FROM<>-99 BEGIN
   SET @SQL_ACC = @SQL_ACC +' AND  ACC.ACC_WATER >= '+@ACC_WATER_FROM;
  END

  IF @ACC_WATER_TO<>-99 BEGIN
   SET @SQL_ACC = @SQL_ACC +' AND  ACC.ACC_WATER <= '+@ACC_WATER_TO;
  END

  IF @ISSHOWZEROWATERACC<>1 BEGIN
   SET @SQL_ACC = @SQL_ACC +' AND  ACC.ACC_WATER > 0 ';
  END

  IF @RECORD_LGLD_STATE<>-99 BEGIN
  SET @SQL_ACC = @SQL_ACC +' AND  MR.RECORD_LGLD_STATE ='+CAST(@RECORD_LGLD_STATE AS varchar(20));
  END

 IF @RECORD_TYPE<>-99 BEGIN
 SET @SQL_ACC = @SQL_ACC +' AND  MR.RECORD_TYPE ='+CAST(@RECORD_TYPE AS varchar(20));
 END

   IF @CHECK_PERSONS IS NOT NULL BEGIN
   SET @SQL_ACC = @SQL_ACC + ' INNER JOIN (SELECT * FROM FUNC_SPLITSTRING('''+ @CHECK_PERSONS + ''','','')) C_PERSON ON C_PERSON.SINGLEVALUE = ACC.CHECK_PERSON ';
  END

  SET @SQL_ACC = @SQL_ACC + ' AND ACC.BILLING_MONTH BETWEEN ' + CAST(@BILLINGMONTH_START AS VARCHAR(20)) + ' AND ' + CAST(@BILLINGMONTH_END AS VARCHAR(20));
  SET @SQL_ACC = @SQL_ACC + ' LEFT JOIN ACC_CHARGES_EXTRA exter with(nolock) ON ACC.FEE_ID = exter.FEE_ID ';

  SET @SQL_OTHER_COLUMN = @SQL_OTHER_COLUMN  + ', US.USER_NAME AS LAST_PRINTER_NAME ';
  SET @SQL_MR_OTHER = @SQL_MR_OTHER + ' LEFT JOIN CSM_USERS US ON US.USER_ID = A.LAST_PRINTER ';
---------------- 结果输出
  SET @SQL_RESULT = 'SELECT A.*' + @SQL_OTHER_COLUMN  + ' FROM ( ' + 
    ' SELECT * FROM (' + 
       @SQL_MR_ROWNUM + @SQL_ACC_COLUMN + @SQL_MR_TABLE + @SQL_MR_JOIN + @SQL_ACC + @SQL_MR_WHERE + 
    ' ) A1 ' 
		+ @SQL_MR_ROWNUM_WHERE + 
    ' ) A ' + @SQL_MR_OTHER + ' ORDER BY A.ROWSN ';
	
  SET @SQL_RESULT_SUMMARY = N'SELECT 
	         COUNT(*) AS TOTAL_COUNT,
			 ''  总水量：'' + CAST(ISNULL(SUM(ACC_WATER),0) as varchar)+ 
			 ''，开账总金额：¥'' +  CAST(ISNULL(SUM(ACC_CHECK_MONEY),0) as varchar) + 
			 ''，账单总金额：¥'' +  CAST(ISNULL(SUM(ACC_MONEY),0) as varchar) + 
			 ''，总用水费：¥'' + CAST(ISNULL(SUM(PI1_MONEY),0) as varchar) + 
			 ''，总污水费：¥'' + CAST(ISNULL(SUM(PI2_MONEY),0) as varchar) + 
			 ''，总其他费用：¥'' + CAST(ISNULL(SUM(PI8_MONEY),0) as varchar) 
         FROM ( SELECT ' + @SQL_ACC_COLUMN + @SQL_MR_TABLE + @SQL_MR_JOIN +@SQL_ACC + @SQL_MR_WHERE + ' ) A ';
   print @SQL_ACC_COLUMN ;
   print @SQL_MR_TABLE ;
   print @SQL_MR_JOIN ;
   print @SQL_ACC ;
   print @SQL_MR_WHERE;
   print @SQL_RESULT;
   print @SQL_RESULT_SUMMARY;
   begin

			EXEC sp_executesql @SQL_RESULT
   end
   begin

			EXEC sp_executesql @SQL_RESULT_SUMMARY
   end

END



